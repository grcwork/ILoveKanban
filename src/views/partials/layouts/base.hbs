<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ILoveKanban</title>

    <!-- jQuery CDN -->
    <script src="https://code.jquery.com/jquery-3.5.0.js"></script>

    <!-- SweetAlert CDN -->
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <!-- Custom CSS -->
    <link rel="stylesheet" type="text/css" href="/css/nav.css" />
    <link rel="stylesheet" type="text/css" href="/css/index.css" />
    <link rel="stylesheet" type="text/css" href="/css/board.css" />

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Mochiy+Pop+P+One&display=swap" rel="stylesheet">

</head>

<body>
    <div class="main-container">
        {{#> content}}
        {{/content}}

        <div class="wrapper">
            <div class="vertical-nav">{{>includes/nav}}</div>
            <div class="proyect-board">{{>includes/board}}</div>
            <div id="circularloadingToolContainer">
                <canvas data-board="{{completionRate}}" id="circularloadingTool" width="160" height="160"></canvas>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
        function changeTaskStatus(_id, newStatus) {
            axios.patch('/task/move', { taskId: _id, newStatus: newStatus })
                .then(function (response) {
                    window.location.reload()
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
    </script>

    <script>
        $('.task-description').bind('input propertychange', function () {
            taskId = $(this).attr("data-note-id");
            newDescription = this.value;
            axios.patch('/task/edit', { taskId: taskId, newDescription: newDescription });
        });
    </script>

    <script>
        function addNewTask(idBoard, status) {
            axios.post('/task/add', { idBoard, status })
                .then(function (response) {
                    window.location.reload()
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
    </script>
    <script>
        function deleteTask(idTask) {
            axios.delete('/task/delete', { data: { idTask } })
                .then(function (response) {
                    window.location.reload()
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
    </script>
    <script>
        function addNewBoard() {
            axios.post('/board/add')
                .then(function (response) {
                    window.location = response.data.redirect;
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
    </script>
    <script>
        function deleteBoard(Idboard, boardTitle) {
            swal({
                title: "Are you sure?",
                text: `Are you sure you want to delete the '${boardTitle}' board?`,
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        axios.delete(`/board/delete/${Idboard}`)
                            .then(function (response) {
                                swal("The board has been deleted!", {
                                    icon: "success",
                                })
                                    .then(() => {
                                        window.location = '/board/'
                                    });
                            })
                            .catch(function (error) {
                                console.log(error);
                            });
                    } else {
                        swal("Your board is safe!");
                    }
                });
        }
    </script>

    <script>
        $('.board-title').focusout(function () {
            boardId = $(this).attr("data-board-id");
            newTitle = this.value;
            axios.patch('/board/edit', { boardId: boardId, newTitle: newTitle })
            .then((response) => {
                window.location.reload();
            })
            .catch((error) => {
                console.log(error);
            });
        });
    </script>

    <script>
        function drawCircleLoader() {
            completionRate = $('#circularloadingTool').attr("data-board");
            console.log(completionRate);
            let ctx = document.getElementById('circularloadingTool').getContext('2d');
            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
            ctx.lineWidth = 15;
            ctx.fillStyle = '#2CF6B3';
            ctx.strokeStyle = '#2CF6B3'
            ctx.textAlign = 'center';
            ctx.font = '20px monospace';
            ctx.fillText(`${Math.floor(completionRate*100)}%`, ctx.canvas.width*0.5, ctx.canvas.height*0.5)
            ctx.beginPath();
            ctx.arc(80, 80, 50, -Math.PI/2, 2*Math.PI*completionRate - Math.PI/2);
            ctx.stroke();
        }
        
        $(document).ready(function () {
            drawCircleLoader();
        });
    </script>
</body>

</html>